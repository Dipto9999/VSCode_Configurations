// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+1",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+shift+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "alt+c alt+f",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+.",
        "command": "breadcrumbs.toggle"
    },
    {
        "key": "ctrl+shift+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+shift+;",
        "command": "breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+shift+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "shift+alt+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+end",
        "command": "-cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "shift+alt+left",
        "command": "cursorWordEndLeftSelect"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+right",
        "command": "cursorLineEnd"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+left",
        "command": "cursorLineStart"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorLineStartSelect"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "shift+end",
        "command": "editor.action.smartSelect.expand"
    },
    {
        "key": "pagedown",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+end",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+home",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "alt+z",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "alt+y",
        "command": "cursorRedo"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+]",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+alt+[",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+alt+]",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "alt+left",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "ctrl+shift+/",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+down",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+k",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
    },
    {
        "key": "escape",
        "command": "-workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+up",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.reloadWindow"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+alt+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.focusLastEditorGroup"
    },
    {
        "key": "ctrl+alt+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+alt+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+alt+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+alt+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+alt+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+alt+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+alt+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+alt+r",
        "command": "python.execInTerminal",
        "when": "editorFocus && editorLangId == python"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "colonize.endline",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+enter",
        "command": "-colonize.endline",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+enter",
        "command": "-colonize.newline",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "colonize.newline",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+enter",
        "command": "colonize.hold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-colonize.hold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "extension.advancedNewFile"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-extension.advancedNewFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+f12",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+s",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+s",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+; ctrl+b",
        "command": "jupyter.insertCellBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; b",
        "command": "-jupyter.insertCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; a",
        "command": "jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells "
    },
    {
        "key": "ctrl+; a",
        "command": "-jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+[",
        "command": "jupyter.gotoPrevCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells"
    },
    {
        "key": "ctrl+alt+[",
        "command": "-jupyter.gotoPrevCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+]",
        "command": "jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells "
    },
    {
        "key": "ctrl+alt+]",
        "command": "-jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; s",
        "command": "jupyter.insertCellBelowPosition",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells "
    },
    {
        "key": "ctrl+; s",
        "command": "-jupyter.insertCellBelowPosition",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.view.extension.gitlab-workflow"
    }
]